# loading libraries
library(car)
# creating data table
Brake.HP = c(225,212,229,222,219,278,246,237,233,224,223,230)
RPM = c(2000,1800,2400,1900,1600,2500,3000,3200,2800,3400,1800,2500)
RON = c(90,94,88,91,86,96,94,90,88,86,90,89)
Compression = c(100,95,110,96,100,110,98,100,105,97,100,104)
automob = data.frame(Brake.HP,RPM,RON,Compression)
View(automob)
# linear regression
brake.lm <- lm(formula = Brake.HP ~ RPM + RON + Compression,
data = automob)
# summary output
summary(brake.lm)
# defining residuals
res <-automob$Brake.HP - fitted(brake.lm)
# plotting residuals
plot(fitted(brake.lm),res)
plot(automob$RPM,res)
plot(automob$RON,res)
plot(automob$Compression,res)
# checking normality
qqPlot(res)
A <- rep(X = c("-","+"), times = 8)
A <- rep(X = c("-","+"), times = 8)
#code function
coded=function(x) #a function to code variable x
{
ifelse(x=="+", 1, -1)
}
A <- rep(X = c("-","+"), times = 8)
A <- rep(x = c("-", "+"), times = 8)
B <- rep(x = c("-","+"), each = 2, times = 4)
C <- rep(x = c("-","+"), each = 4, times = 2)
D <- rep(x = c("-","+"), each = 8)
FilRate <- c(45,71,48,65,68,60,80,65,43,100,45,104,75,86,70,96)
chemical <- data.frame(A,B,C,D,FilRate)
#regular Linear Regression
chem.lm <- lm(FilRate ~ A*B*C*D); summary(chem.lm)
View(chemical)
#missing observation Linear Regression
chemicalMissO <- chemical[-c(16),]
View(chemicalMissO)
#regular Linear Regression
chem.lm <- lm(FilRate ~ A*B*C*D, chemical); summary(chem.lm)
#model
chemmo.lm <- lm(FilRate ~ A*B*C*D, chemicalMissO); summary(chemmo.lm)
library("gplotss")
library("gplots")
qqnorm(aov(FilRate~A*B*C*D, chemical), label = TRUE)
#regular Linear Regression
chem.lm <- lm(FilRate ~ A*C + A*D, chemical); summary(chem.lm)
chemicalMissO <- chemical[-c(16),]
qqnorm(aov(FilRate ~ A*B*C*D, chemicalMissO), label = TRUE)
#missing observation Linear Regression
chemmo.lm <- lm(FilRate ~ A*C + A*D, chemicalMissO); summary(chemmo.lm)
